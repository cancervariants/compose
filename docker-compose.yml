version: '3'

services:
  # A local instance of dynamodb, based on sqlite which persists data between instances
  # dynamodb:
  #   image: amazon/dynamodb-local
  #   hostname: dynamodb
  #   container_name: dynamodb
  #   ports:
  #     # map port 8000 in the container to port 8000 in the host
  #     - "8000:8000"
  #   # tell dynamo to persist data  
  #   command: -jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data/
  #   # map a directory in the host OS to this container
  #   volumes:
  #    - ./data/dynamodb:/home/dynamodblocal/data
  
  # Run scylladb in dynamodb mode to provide a performant local store. Save data to ./data/scylla
  dynamodb:
    image: scylladb/scylla
    hostname: dynamodb
    container_name: dynamodb
    ports:
      # map port 8000 in the container to port 8000 in the host
      - "8000:8000"
    # tell scylla to run in dynamodb mode, see http://scylla.docs.scylladb.com/master/alternator/alternator.html#write-isolation-policies
    command: --smp 1 --memory=750M --overprovisioned 1 --alternator-port=8000 --alternator-write-isolation=only_rmw_uses_lwt
    # map a directory in the host OS to this container
    volumes:
     - ./data/scylla:/var/lib/scylla  
  
  # The therapy service
  therapy:
    build: ../normalizers/therapy
    hostname: therapy
    container_name: therapy
    environment: 
      - THERAPY_NORM_DB_URL=http://dynamodb:8000

      # Get values of all environment variables below from .env file.
      - RXNORM_API_KEY=${RXNORM_API_KEY}
      - DATAVERSE_API_KEY=${DATAVERSE_API_KEY}

      # If AWS credentials are not stored in environment variables in
      # .env file, then set equal to "dev", "foo", "bar" in container.
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-dev}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-foo}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-bar}

    ports:
      # map port 80 in the container to free port in the host
      - "8001:80"
    volumes:
      - ./data/therapy:/app/therapy/data          
    depends_on:
      - "dynamodb"  
  
  # The gene service
  #  gene:
  #    build: ../normalizers/gene
  #  hostname: gene
  #  container_name: gene
  #  environment: 
  #    - GENE_NORM_DB_URL=http://dynamodb:8000
      # read from .env file
      #    - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-dev}
      #    - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-foo}
      #    - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-bar}
      #  ports:
      # map port 80 in the container to free port in the host
      #     - "8002:80"
      #  depends_on:
      #   - "dynamodb"
      #  volumes:
      #   - ./data/gene:/app/gene/data
  # The variant service
  #  variant:
  #  build: ../normalizers/variant
  #  hostname: variant
  #  container_name: variant
  #  environment:
      # variant shares gene's db 
      #    - GENE_NORM_DB_URL=http://dynamodb:8000
      # read from .env file
      #    - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-dev}
      #    - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-foo}
      #    - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-bar}
      #  ports:
      # map port 80 in the container to free port in the host
      #   - "8003:80"
      #  depends_on:
      #   - "dynamodb"
      #  volumes:
     # The variant service has packaged data at variant/data,
     # so we do not map a host directory to variant/data.
     # We do share seqrepo already harvested for gene
     #   - ./data/gene/seqrepo:/app/variant/data/seqrepo
  # The disease service
  #  disease:
  #   build: ../normalizers/disease
  #   hostname: disease
  #  container_name: disease
  #  environment: 
  #     - DISEASE_NORM_DB_URL=http://dynamodb:8000
      # read from .env file
      #    - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-dev}
      #    - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-foo}
      #    - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-bar}
      #   ports:
      # map port 80 in the container to free port in the host
      #  - "8004:80"
      #  depends_on:
      #  - "dynamodb"
      #  volumes:
      #    - ./data/disease:/app/disease/data
  # The neo4j service see https://github.com/grand-stack/grand-stack-starter
  #  neo4j:
  #   build: ./neo4j
    # image: neo4j:4.2.5
    #   volumes:
    #    - ./data/neo4j:/data
      # wget https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/4.2.5/apoc-4.2.5-all.jar
      # - ./data/neo4j-plugins:/plugins
      #   ports:
      #   - 7474:7474
      #   - 7687:7687
      #   environment:
      #    - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      #   - NEO4J_apoc_import_file_enabled=true
      #   - NEO4J_apoc_export_file_enabled=true
      # - NEO4J_dbms_shell_enabled=true
      #   - NEO4J_apoc_import_file_use__neo4j__config=true
      #   - NEO4JLABS_PLUGINS=["apoc"]
  # The metakb service
  #  metakb:
  #   build: ../metakb
  #   hostname: metakb
  #   container_name: metakb
  #   environment: 
  #     - GENE_NORM_DB_URL=http://dynamodb:8000
  #    - THERAPY_NORM_DB_URL=http://dynamodb:8000
  #    - DISEASE_NORM_DB_URL=http://dynamodb:8000
      # read from .env file
      #     - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-dev}
      #     - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-foo}
      #    - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-bar}
      #  - METAKB_DB_URL=bolt://neo4j:7687
      #   - METAKB_DB_USERNAME=${METAKB_DB_USERNAME}
      #   - METAKB_DB_PASSWORD=${METAKB_DB_PASSWORD}
      #   ports:
      # map port 80 in the container to free port in the host
      #   - "8005:80"
      #  depends_on:
      #   - "neo4j"
      #   - "disease"
      #   - "variant"
      #   - "gene"
      #  - "therapy"      
      #   volumes:
      #    - ./metakb/metakb:/app/metakb
      #   - ./data/metakb:/app/metakb/data
      #   - ./data/therapy:/app/therapy/data          
      #   - ./data/gene:/app/gene/data
      #   - ./data/disease:/app/disease/data

  # A generic python instance to run tests
  #  test:
  #  build: test
  #  hostname: test
  #  container_name: test
  #  volumes:
    # map tests source so we can add/modify tests w/out needing to re-build
    #     - ./test/tests:/app/tests
    #   depends_on:
    #   - "disease"
    #   - "variant"
    #   - "gene"
    #   - "therapy"

      
